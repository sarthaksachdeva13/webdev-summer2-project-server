server.port = 8181

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"

spring.datasource.url=jdbc:mysql://us-cdbr-iron-east-01.cleardb.net:3306/heroku_0d6d5b6fa04a2fa?autoReconnect=true&useSSL=false
spring.datasource.username=bfd94eebcbbb67
spring.datasource.password=0c869dce

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1



server.servlet.session.timeout= # Session timeout. If a duration suffix is not specified, seconds will be used.
spring.session.redis.namespace=spring:session # Namespace for keys used to store sessions.


spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
spring.redis.database=0 
spring.redis.url= redis://redistogo:994c39d9844e9b6b671bc948c5ef39d9@spinyfin.redistogo.com:9381/# Connection URL. Overrides host, port, and password. User is ignored. Example: redis://user:password@example.com:6379
spring.redis.host= spinyfin.redistogo.com
spring.redis.password=994c39d9844e9b6b671bc948c5ef39d9 
spring.redis.port = 9381 
spring.redis.sentinel.master= # Name of the Redis server.
spring.redis.sentinel.nodes= # Comma-separated list of "host:port" pairs.
spring.redis.ssl=false






# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


#spring.mail.properties.mail.smtp.ssl.enable = true
spring.mail.host = smtp.gmail.com
spring.mail.username =webdevsummer2@gmail.com
# Not writing my original gmail password as these credentials are used to send the email once a user checks out/registers
spring.mail.password = webdev123
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
support.email=sarthaksachdeva13@gmail.com
